<!DOCTYPE html>
<html lang="he" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>דשבורד ניהול מלאי - מפעל משלוחים</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Helvetica Neue', Arial, sans-serif;
            background: #f0f4f8;
            min-height: 100vh;
            padding: 0;
            color: #1a202c;
        }

        .container {
            max-width: 100%;
            margin: 0;
            padding: 0;
        }

        .header {
            background: #ffffff;
            border-bottom: 1px solid #e2e8f0;
            padding: 20px 48px;
            margin-bottom: 0;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-title {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .company-logo {
            background: #0369a1;
            color: white;
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 1.1rem;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        .header h1 {
            font-size: 1.75rem;
            color: #0c4a6e;
            font-weight: 600;
            letter-spacing: -0.5px;
        }

        .header-subtitle {
            color: #64748b;
            font-size: 0.95rem;
            margin-top: 6px;
            font-weight: 500;
        }

        .datetime-banner {
            background: linear-gradient(135deg, #0891b2 0%, #0e7490 100%);
            color: white;
            padding: 12px 48px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 14px;
            font-weight: 500;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }

        .datetime-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .datetime-item svg {
            width: 18px;
            height: 18px;
            fill: white;
        }

        .btn {
            background: #0369a1;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
        }

        .btn:hover {
            background: #075985;
            transform: translateY(-1px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .btn-success {
            background: #0891b2;
        }

        .btn-success:hover {
            background: #0e7490;
        }

        .btn-danger {
            background: #dc2626;
        }

        .btn-danger:hover {
            background: #b91c1c;
        }

        .header-actions {
            display: flex;
            gap: 15px;
            align-items: center;
        }

        .btn-contact {
            background: #0891b2;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-contact:hover {
            background: #0e7490;
            transform: translateY(-1px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .alert-banner {
            background: #dc2626;
            color: white;
            padding: 16px 48px;
            margin-bottom: 0;
            display: none;
            align-items: center;
            gap: 12px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
            animation: pulse 2s infinite;
        }

        .alert-banner.show {
            display: flex;
        }

        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.8; }
        }

        .stats-row {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 0;
            margin-bottom: 0;
            background: white;
            border-bottom: 1px solid #e2e8f0;
        }

        .stat-box {
            background: white;
            padding: 32px;
            text-align: center;
            border-right: 1px solid #e2e8f0;
        }

        .stat-box:last-child {
            border-right: none;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 600;
            color: #0369a1;
            letter-spacing: -1px;
        }

        .stat-label {
            color: #64748b;
            font-size: 13px;
            margin-top: 8px;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .add-row-form {
            background: #f8fafc;
            padding: 24px 48px;
            border-bottom: 1px solid #e2e8f0;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 2fr 3fr 1fr 1fr 100px;
            gap: 12px;
            align-items: end;
        }

        .form-group {
            display: flex;
            flex-direction: column;
        }

        .form-group label {
            font-size: 12px;
            font-weight: 600;
            color: #64748b;
            margin-bottom: 6px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .form-group input {
            height: 38px;
            padding: 8px 12px;
            border: 1px solid #e2e8f0;
            border-radius: 4px;
            font-size: 14px;
            transition: all 0.2s ease;
            font-family: inherit;
            background: white;
        }

        .form-group input:focus {
            outline: none;
            border-color: #0891b2;
            box-shadow: 0 0 0 3px rgba(8, 145, 178, 0.1);
        }

        .table-card {
            background: white;
            padding: 48px;
            overflow: auto;
        }

        .inventory-table {
            width: 100%;
            border-collapse: collapse;
            background: white;
        }

        .inventory-table thead {
            background: #f8fafc;
            border-bottom: 2px solid #e2e8f0;
        }

        .inventory-table th {
            padding: 16px 20px;
            text-align: center;
            font-weight: 600;
            font-size: 13px;
            white-space: nowrap;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            color: #64748b;
        }

        .inventory-table tbody tr {
            border-bottom: 1px solid #e2e8f0;
            transition: all 0.15s ease;
            height: 60px;
        }

        .inventory-table tbody tr:hover {
            background: #f8fafc;
        }

        .inventory-table td {
            padding: 12px 15px;
            text-align: center;
            vertical-align: middle;
        }

        .inventory-table input[type="text"] {
            width: 100%;
            height: 38px;
            padding: 8px 12px;
            border: 1px solid #e2e8f0;
            border-radius: 4px;
            font-size: 14px;
            transition: all 0.2s ease;
            font-family: inherit;
            background: white;
        }

        .inventory-table input[type="text"]:focus {
            outline: none;
            border-color: #0891b2;
            box-shadow: 0 0 0 3px rgba(8, 145, 178, 0.1);
        }

        .inventory-table input[type="number"] {
            width: 100%;
            height: 38px;
            padding: 8px 12px;
            border: 1px solid #e2e8f0;
            border-radius: 4px;
            font-size: 14px;
            text-align: center;
            transition: all 0.2s ease;
            font-family: inherit;
            background: white;
        }

        .inventory-table input[type="number"]:focus {
            outline: none;
            border-color: #0891b2;
            box-shadow: 0 0 0 3px rgba(8, 145, 178, 0.1);
        }

        .status-badge {
            display: inline-block;
            padding: 6px 16px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-critical {
            background: #dc2626;
            color: white;
        }

        .status-warning {
            background: #f59e0b;
            color: white;
        }

        .status-good {
            background: #059669;
            color: white;
        }

        .reorder-value {
            font-size: 16px;
            font-weight: 700;
            padding: 8px 16px;
            border-radius: 4px;
            display: inline-block;
            min-width: 40px;
        }

        .delete-btn {
            background: transparent;
            color: #dc2626;
            border: none;
            padding: 6px 12px;
            border-radius: 4px;
            cursor: pointer;
            font-size: 20px;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .delete-btn:hover {
            background: #fee2e2;
            transform: scale(1.1);
        }

        .notification {
            position: fixed;
            bottom: 24px;
            left: 24px;
            background: #0891b2;
            color: white;
            padding: 16px 24px;
            border-radius: 6px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            transform: translateY(200px);
            transition: all 0.3s ease;
            z-index: 1000;
            font-weight: 500;
            font-size: 14px;
        }

        .notification.show {
            transform: translateY(0);
        }

        .notification.error {
            background: #dc2626;
        }

        @media (max-width: 1200px) {
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .stats-row {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        .icon {
            width: 24px;
            height: 24px;
            fill: currentColor;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <div class="header-title">
                <div class="company-logo">🏭 אחזקת משלוחים</div>
                <div>
                    <h1>FlowTrack – מערכת חכמה לניהול מלאי, בקרה ויעילות תפעולית</h1>
                    <p class="header-subtitle">בקרה מלאה על המלאי, התרעות חכמות וניתוח נתונים</p>
                </div>
            </div>
            <div class="header-actions">
                <button class="btn-contact" onclick="contactManager()">📧 צור קשר - יחיאל</button>
                <button class="btn btn-success" onclick="exportToExcel()">📊 ייצא לאקסל</button>
            </div>
        </div>

        <!-- DateTime Banner -->
        <div class="datetime-banner">
            <div class="datetime-item">
                <svg viewBox="0 0 24 24">
                    <path d="M19 4h-1V2h-2v2H8V2H6v2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V10h14v10zm0-12H5V6h14v2z"/>
                </svg>
                <span id="currentDate">טוען תאריך...</span>
            </div>
            <div class="datetime-item">
                <svg viewBox="0 0 24 24">
                    <path d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm.5-13H11v6l5.25 3.15.75-1.23-4.5-2.67z"/>
                </svg>
                <span id="currentTime">טוען שעה...</span>
            </div>
        </div>

        <!-- Alert Banner -->
        <div class="alert-banner" id="alertBanner">
            <svg class="icon" viewBox="0 0 24 24">
                <path d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"/>
            </svg>
            <span id="alertText"></span>
        </div>

        <!-- Statistics -->
        <div class="stats-row">
            <div class="stat-box">
                <div class="stat-number" id="totalItems">0</div>
                <div class="stat-label">סך פריטים</div>
            </div>
            <div class="stat-box">
                <div class="stat-number" id="criticalItems">0</div>
                <div class="stat-label">פריטים קריטיים</div>
            </div>
            <div class="stat-box">
                <div class="stat-number" id="warningItems">0</div>
                <div class="stat-label">פריטים באזהרה</div>
            </div>
            <div class="stat-box">
                <div class="stat-number" id="totalValue">0</div>
                <div class="stat-label">יחידות במלאי</div>
            </div>
        </div>

        <!-- Add New Item Form -->
        <div class="add-row-form">
            <form id="addItemForm">
                <div class="form-row">
                    <div class="form-group">
                        <label>מקט</label>
                        <input type="text" id="itemSku" required placeholder="לדוגמה: SKU-001">
                    </div>
                    <div class="form-group">
                        <label>שם הפריט</label>
                        <input type="text" id="itemName" required placeholder="לדוגמה: ברגים">
                    </div>
                    <div class="form-group">
                        <label>תיאור</label>
                        <input type="text" id="itemDescription" placeholder="תיאור מפורט של הפריט">
                    </div>
                    <div class="form-group">
                        <label>מלאי במחסן</label>
                        <input type="number" id="currentStock" required min="0" placeholder="20">
                    </div>
                    <div class="form-group">
                        <label>מלאי מינימלי</label>
                        <input type="number" id="minStock" required min="0" placeholder="50">
                    </div>
                    <div class="form-group">
                        <label>&nbsp;</label>
                        <button type="submit" class="btn btn-success">➕ הוסף</button>
                    </div>
                </div>
            </form>
        </div>

        <!-- Inventory Table -->
        <div class="table-card">
            <table class="inventory-table">
                <thead>
                    <tr>
                        <th style="width: 10%;">מקט</th>
                        <th style="width: 15%;">שם הפריט</th>
                        <th style="width: 23%;">תיאור</th>
                        <th style="width: 10%;">מלאי במחסן</th>
                        <th style="width: 10%;">מלאי מינימלי</th>
                        <th style="width: 10%;">כמות למשיכה</th>
                        <th style="width: 10%;">סטטוס</th>
                        <th style="width: 7%;">פעולות</th>
                    </tr>
                </thead>
                <tbody id="inventoryTableBody">
                    <!-- Rows will be added dynamically -->
                </tbody>
            </table>
        </div>
    </div>

    <div class="notification" id="notification">
        <span id="notificationText"></span>
    </div>

    <script>
        let inventory = [];

        // Initialize system
        function initSystem() {
            loadData();
            renderTable();
            updateStats();
            checkAlerts();
            updateDateTime();
            setInterval(updateDateTime, 1000);
        }

        // Update date and time
        function updateDateTime() {
            const now = new Date();
            const dateOptions = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            const dateStr = now.toLocaleDateString('he-IL', dateOptions);
            document.getElementById('currentDate').textContent = dateStr;
            
            const timeStr = now.toLocaleTimeString('he-IL', { hour: '2-digit', minute: '2-digit', second: '2-digit' });
            document.getElementById('currentTime').textContent = timeStr;
        }

        // Add new item
        document.getElementById('addItemForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const item = {
                id: Date.now(),
                sku: document.getElementById('itemSku').value,
                name: document.getElementById('itemName').value,
                description: document.getElementById('itemDescription').value,
                currentStock: parseInt(document.getElementById('currentStock').value),
                minStock: parseInt(document.getElementById('minStock').value),
                lastUpdated: new Date().toISOString()
            };

            inventory.push(item);
            saveData();
            renderTable();
            updateStats();
            checkAlerts();
            this.reset();
            showNotification('פריט נוסף בהצלחה!');
        });

        // Render table
        function renderTable() {
            const tbody = document.getElementById('inventoryTableBody');
            
            if (inventory.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="8" style="text-align: center; padding: 40px; color: #718096;">
                            <svg style="width: 48px; height: 48px; margin-bottom: 12px; fill: #cbd5e0;" viewBox="0 0 24 24">
                                <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V5h14v14z"/>
                            </svg>
                            <div style="font-size: 18px; font-weight: 600;">אין פריטים במלאי</div>
                            <div>הוסף פריט ראשון באמצעות הטופס למעלה</div>
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = inventory.map(item => {
                const status = getStatus(item);
                
                return `
                    <tr>
                        <td>
                            <input type="text" value="${escapeHtml(item.sku)}" 
                                   onchange="updateItem(${item.id}, 'sku', this.value)"
                                   style="font-weight: 600; color: #0369a1;">
                        </td>
                        <td>
                            <input type="text" value="${escapeHtml(item.name)}" 
                                   onchange="updateItem(${item.id}, 'name', this.value)">
                        </td>
                        <td>
                            <input type="text" value="${escapeHtml(item.description || '')}" 
                                   onchange="updateItem(${item.id}, 'description', this.value)"
                                   placeholder="הזן תיאור...">
                        </td>
                        <td>
                            <input type="number" value="${item.currentStock}" min="0"
                                   onchange="updateItem(${item.id}, 'currentStock', parseInt(this.value))"
                                   style="font-weight: bold; font-size: 16px; color: #0f172a;">
                        </td>
                        <td>
                            <input type="number" value="${item.minStock}" min="0"
                                   onchange="updateItem(${item.id}, 'minStock', parseInt(this.value))"
                                   style="font-weight: 600; font-size: 15px; color: #334155;">
                        </td>
                        <td>
                            <span class="reorder-value status-badge ${status.reorderClass}">
                                ${status.reorderAmount}
                            </span>
                        </td>
                        <td>
                            <span class="status-badge ${status.class}">${status.text}</span>
                        </td>
                        <td>
                            <button class="delete-btn" onclick="deleteItem(${item.id})">🗑️</button>
                        </td>
                    </tr>
                `;
            }).join('');
        }

        // Get status
        function getStatus(item) {
            const difference = item.minStock - item.currentStock;
            const threshold = item.minStock * 1.05;
            
            let statusResult = {};
            
            if (item.currentStock < item.minStock) {
                statusResult.class = 'status-critical';
                statusResult.text = '🔴 קריטי';
                statusResult.reorderClass = 'status-critical';
                statusResult.reorderAmount = difference;
            } else if (item.currentStock <= threshold) {
                statusResult.class = 'status-warning';
                statusResult.text = '🟡 אזהרה';
                statusResult.reorderClass = 'status-warning';
                statusResult.reorderAmount = 0;
            } else {
                statusResult.class = 'status-good';
                statusResult.text = '🟢 תקין';
                statusResult.reorderClass = 'status-good';
                statusResult.reorderAmount = 0;
            }
            
            return statusResult;
        }

        // Update item
        function updateItem(id, field, value) {
            const item = inventory.find(i => i.id === id);
            if (item) {
                item[field] = value;
                item.lastUpdated = new Date().toISOString();
                saveData();
                renderTable();
                updateStats();
                checkAlerts();
                showNotification('עודכן בהצלחה!');
            }
        }

        // Delete item
        function deleteItem(id) {
            if (confirm('האם אתה בטוח שברצונך למחוק פריט זה?')) {
                inventory = inventory.filter(i => i.id !== id);
                saveData();
                renderTable();
                updateStats();
                checkAlerts();
                showNotification('הפריט נמחק', 'error');
            }
        }

        // Update statistics
        function updateStats() {
            document.getElementById('totalItems').textContent = inventory.length;
            
            let critical = 0;
            let warning = 0;
            let totalValue = 0;
            
            inventory.forEach(item => {
                const threshold = item.minStock * 1.05;
                
                if (item.currentStock < item.minStock) {
                    critical++;
                } else if (item.currentStock <= threshold) {
                    warning++;
                }
                totalValue += item.currentStock;
            });
            
            document.getElementById('criticalItems').textContent = critical;
            document.getElementById('warningItems').textContent = warning;
            document.getElementById('totalValue').textContent = totalValue;
        }

        // Check alerts
        function checkAlerts() {
            const alertBanner = document.getElementById('alertBanner');
            const alertText = document.getElementById('alertText');
            
            const criticalItems = inventory.filter(item => item.currentStock < item.minStock);
            
            if (criticalItems.length > 0) {
                alertText.textContent = `⚠️ התראה: ${criticalItems.length} פריטים במצב קריטי ודורשים הזמנה מיידית!`;
                alertBanner.classList.add('show');
            } else {
                alertBanner.classList.remove('show');
            }
        }

        // Contact Manager
        function contactManager() {
            const email = 'Yehiel.yshayev@icl-group.com';
            const subject = 'בקשת תמיכה - מערכת ניהול מלאי';
            const body = `שלום יחיאל,

אני פונה אליך בנוגע למערכת ניהול המלאי.

[נא להוסיף כאן את פרטי הפנייה]

תודה רבה,
`;
            
            // Create mailto link that opens Outlook
            const mailtoLink = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
            
            // Open in new window
            window.location.href = mailtoLink;
        }

        // Export to Excel
        function exportToExcel() {
            if (inventory.length === 0) {
                showNotification('אין נתונים לייצוא', 'error');
                return;
            }

            const headers = ['מקט', 'שם הפריט', 'תיאור', 'מלאי במחסן', 'מלאי מינימלי', 'כמות למשיכה', 'סטטוס'];
            const csvContent = [
                headers.join(','),
                ...inventory.map(item => {
                    const status = getStatus(item);
                    return [
                        `"${item.sku}"`,
                        `"${item.name}"`,
                        `"${item.description || ''}"`,
                        item.currentStock,
                        item.minStock,
                        status.reorderAmount,
                        `"${status.text}"`
                    ].join(',');
                })
            ].join('\n');

            const blob = new Blob(['\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            
            link.setAttribute('href', url);
            link.setAttribute('download', `inventory_${new Date().toISOString().split('T')[0]}.csv`);
            link.style.visibility = 'hidden';
            
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            showNotification('קובץ אקסל יוצא בהצלחה!');
        }

        // Clear all
        function clearAll() {
            if (confirm('האם אתה בטוח שברצונך למחוק את כל הנתונים?')) {
                if (confirm('זוהי פעולה בלתי הפיכה! האם להמשיך?')) {
                    inventory = [];
                    saveData();
                    renderTable();
                    updateStats();
                    checkAlerts();
                    showNotification('כל הנתונים נמחקו', 'error');
                }
            }
        }

        // Save data
        function saveData() {
            try {
                localStorage.setItem('inventoryData', JSON.stringify(inventory));
            } catch (e) {
                console.error('Error saving:', e);
            }
        }

        // Load data
        function loadData() {
            try {
                const saved = localStorage.getItem('inventoryData');
                if (saved) {
                    inventory = JSON.parse(saved);
                }
            } catch (e) {
                console.error('Error loading:', e);
                inventory = [];
            }
        }

        // Show notification
        function showNotification(message, type = 'success') {
            const notification = document.getElementById('notification');
            const text = document.getElementById('notificationText');
            
            text.textContent = message;
            notification.className = 'notification show';
            
            if (type === 'error') {
                notification.classList.add('error');
            }
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }

        // Escape HTML
        function escapeHtml(text) {
            if (!text && text !== 0) return '';
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        // Initialize on load
        window.addEventListener('load', initSystem);

        // Auto-save every 30 seconds
        setInterval(() => {
            if (inventory.length > 0) {
                saveData();
            }
        }, 30000);
    </script>
</body>
</html>
